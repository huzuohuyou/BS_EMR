//------------------------------------------------------------------------------
// <auto-generated>
//    此代码是根据模板生成的。
//
//    手动更改此文件可能会导致应用程序中发生异常行为。
//    如果重新生成代码，则将覆盖对此文件的手动更改。
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace MvcApplication2014_12_08
{
    #region 上下文
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    public partial class STUDYEntities3 : ObjectContext
    {
        #region 构造函数
    
        /// <summary>
        /// 请使用应用程序配置文件的“STUDYEntities3”部分中的连接字符串初始化新 STUDYEntities3 对象。
        /// </summary>
        public STUDYEntities3() : base("name=STUDYEntities3", "STUDYEntities3")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 STUDYEntities3 对象。
        /// </summary>
        public STUDYEntities3(string connectionString) : base(connectionString, "STUDYEntities3")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// 初始化新的 STUDYEntities3 对象。
        /// </summary>
        public STUDYEntities3(EntityConnection connection) : base(connection, "STUDYEntities3")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region 分部方法
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet 属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        public ObjectSet<PAT_VISIT> PAT_VISIT
        {
            get
            {
                if ((_PAT_VISIT == null))
                {
                    _PAT_VISIT = base.CreateObjectSet<PAT_VISIT>("PAT_VISIT");
                }
                return _PAT_VISIT;
            }
        }
        private ObjectSet<PAT_VISIT> _PAT_VISIT;

        #endregion

        #region AddTo 方法
    
        /// <summary>
        /// 用于向 PAT_VISIT EntitySet 添加新对象的方法，已弃用。请考虑改用关联的 ObjectSet&lt;T&gt; 属性的 .Add 方法。
        /// </summary>
        public void AddToPAT_VISIT(PAT_VISIT pAT_VISIT)
        {
            base.AddObject("PAT_VISIT", pAT_VISIT);
        }

        #endregion

    }

    #endregion

    #region 实体
    
    /// <summary>
    /// 没有元数据文档可用。
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="STUDYModel", Name="PAT_VISIT")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class PAT_VISIT : EntityObject
    {
        #region 工厂方法
    
        /// <summary>
        /// 创建新的 PAT_VISIT 对象。
        /// </summary>
        /// <param name="id">ID 属性的初始值。</param>
        public static PAT_VISIT CreatePAT_VISIT(global::System.String id)
        {
            PAT_VISIT pAT_VISIT = new PAT_VISIT();
            pAT_VISIT.ID = id;
            return pAT_VISIT;
        }

        #endregion

        #region 基元属性
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String myID
        {
            get
            {
                return _myID;
            }
            set
            {
                OnmyIDChanging(value);
                ReportPropertyChanging("myID");
                _myID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("myID");
                OnmyIDChanged();
            }
        }
        private global::System.String _myID;
        partial void OnmyIDChanging(global::System.String value);
        partial void OnmyIDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PATIENT_ID
        {
            get
            {
                return _PATIENT_ID;
            }
            set
            {
                OnPATIENT_IDChanging(value);
                ReportPropertyChanging("PATIENT_ID");
                _PATIENT_ID = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PATIENT_ID");
                OnPATIENT_IDChanged();
            }
        }
        private global::System.String _PATIENT_ID;
        partial void OnPATIENT_IDChanging(global::System.String value);
        partial void OnPATIENT_IDChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String INP_NO
        {
            get
            {
                return _INP_NO;
            }
            set
            {
                OnINP_NOChanging(value);
                ReportPropertyChanging("INP_NO");
                _INP_NO = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("INP_NO");
                OnINP_NOChanged();
            }
        }
        private global::System.String _INP_NO;
        partial void OnINP_NOChanging(global::System.String value);
        partial void OnINP_NOChanged();
    
        /// <summary>
        /// 没有元数据文档可用。
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, false);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.String _ID;
        partial void OnIDChanging(global::System.String value);
        partial void OnIDChanged();

        #endregion

    
    }

    #endregion

    
}
